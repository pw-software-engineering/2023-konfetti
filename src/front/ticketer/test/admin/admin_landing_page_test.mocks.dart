// Mocks generated by Mockito 5.3.2 from annotations
// in ticketer/test/admin/admin_landing_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ticketer/backend_communication/logic/organizer/communication_organizer.dart'
    as _i3;
import 'package:ticketer/backend_communication/model/organizer.dart' as _i8;
import 'package:ticketer/backend_communication/model/organizer_account.dart'
    as _i7;
import 'package:ticketer/backend_communication/model/response_codes.dart'
    as _i6;
import 'package:tuple/tuple.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTuple2_0<T1, T2> extends _i1.SmartFake
    implements _i2.Tuple2<T1, T2> {
  _FakeTuple2_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OrganizerCommunication].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrganizerCommunication extends _i1.Mock
    implements _i3.OrganizerCommunication {
  @override
  _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>> update(
          _i7.OrganizerAccountUpdate? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [body],
        ),
        returnValue: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #update,
            [body],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #update,
            [body],
          ),
        )),
      ) as _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>);
  @override
  _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>> register(
          _i7.OrganizerAccount? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [body],
        ),
        returnValue: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #register,
            [body],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #register,
            [body],
          ),
        )),
      ) as _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>);
  @override
  _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>> list(
    int? pageNumber,
    int? pageSize,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #listToVerify,
          [
            pageNumber,
            pageSize,
          ],
        ),
        returnValue: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #listToVerify,
            [
              pageNumber,
              pageSize,
            ],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #listToVerify,
            [
              pageNumber,
              pageSize,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>);
  @override
  _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>> decide(
    _i8.Organizer? organizer,
    bool? isAccepted,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #decide,
          [
            organizer,
            isAccepted,
          ],
        ),
        returnValue: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #decide,
            [
              organizer,
              isAccepted,
            ],
          ),
        )),
        returnValueForMissingStub: _i4.Future<
                _i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>.value(
            _FakeTuple2_0<_i5.Response<dynamic>, _i6.ResponseCode>(
          this,
          Invocation.method(
            #decide,
            [
              organizer,
              isAccepted,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Tuple2<_i5.Response<dynamic>, _i6.ResponseCode>>);
}
