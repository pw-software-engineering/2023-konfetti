version: "3.5"
services:
  server:
    container_name: backend
    image: backend
    build:
      context: .
      dockerfile: Dockerfile.core
    ports:
      - "8080:80"
    networks:
      - db
      - pay
      - rabbit
      - blob
      - web
    env_file:
      - variables.env
    depends_on:
      - api-postgres
      - payment-service
      - rabbitmq
      - pdf-generator
      - blob-storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`server.localhost`)"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.port=80"
  api-postgres:
    container_name: api-database
    image: "postgres:latest"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=api
      - POSTGRES_USER=admin
    networks:
      - db
    volumes:
      - /var/ticket_manager/postgres:/var/lib/postgresql/data
  payment-service:
    container_name: payment-service
    image: payment-service
    build:
      context: .
      dockerfile: Dockerfile.payment
    ports:
      - "8081:80"
    networks:
      - pay
    env_file:
      - variables.env
  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - rabbit
  pdf-generator:
    container_name: pdf-generator
    image: pdf-generator
    build:
      context: .
      dockerfile: Dockerfile.pdf_generator
    networks:
      - rabbit
      - blob
    env_file:
      - variables.env
      - secrets.env
    depends_on:
      - rabbitmq
      - blob-storage
  blob-storage:
    container_name: 'blob-storage'
    image: mcr.microsoft.com/azure-storage/azurite
    command:
      - azurite
      - --blobHost
      - 0.0.0.0
      - --blobPort
      - "10000"
    ports:
      - "10000:10000"
    networks:
      - blob
    volumes:
      - /var/ticket_manager/blob:/opt/azurite/folder
  traefik:
    image: "traefik:v2.6"
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker.network=web"
    ports:
      - "80:80"
      - "433:433"
      - "8085:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - web
  dns:
    container_name: dns
    image: gists/dnsmasq
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    volumes:
      - ./dnsmasq:/etc/dnsmasq.d
    restart: always
networks:
  db:
    name: db
    driver: bridge
  pay:
    name: pay
    driver: bridge
  rabbit:
    name: rabbit
    driver: bridge
  blob:
    name: blob
    driver: bridge
  web:
    name: web
    driver: bridge
